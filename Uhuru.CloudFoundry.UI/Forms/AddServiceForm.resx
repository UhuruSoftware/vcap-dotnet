<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAAAAAAIACoEAAARgAAACAgAAAAAAgAqAgAAO4QAAAQEAAAAAAgAGgEAACWGQAAEBAAAAAA
        CABoBQAA/h0AACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/fwAIvG4AF7hxACS2cgAxtHMANwAA
        AAAAAAAAAAAAAFWqVQM4qXEJPLRpET+2bRw6tm0jPLVyJjq3byc+s24lPblsIT23cBk/r28QKqp/BgD/
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZtAA63cAAruHIARbZx
        AFy3cABoAAAAAAAAAAAAAAAAOKlxCTizcRs6tXA0PbVuUz21bmg8tW9yPbdvdT22b3A7tm9iPbdwSz62
        bTFDu2sTVapVAwD/AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtnYAHLhx
        AFO2cQGFtnEBs7dxAcoAAAAAP79fCEKxbhc6tG8wPrdvUjy2bnE8tm+MPLZumzy1bp88tW6fPbVunTy2
        bpQ9tm+FPbVubDu1b0k7t3ArQ7trEzPMZgUAf38CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC0cAAit3EAZ7ZxAaa2cgHftnEB+wAAAABCsW4XPrVuRT22bng9tW+uPLVuyT21b8c8tm++PLVurT21
        b6c8tm+sPbZvtz22bsg9tW/DPLZvqTy1bno+tm41NrZtDjPMZgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALRwACK3cQBntnEBprZyAd+2cQH7P69vEDy0bjM9tW95PbVvrjy2btI9tW/VPbZutjy1
        b5w8tW+HPbVvgDy1b4c9tW+ZPbZutjy1bsk9tW/RPLVusT23b2c+tm0xP69vEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtHAAIrdxAGe2cQGmtnIB37ZxAfs6tG8wPbZwWz21brI8tm/TPLZuvT21
        b5U8tm5YPbhxNjy2bi47t3ArPrVxLT20bTo+t29SPLZufzy2bsE9tm7PPbVvpzy3b24+s24lAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0cAAit3EAZ7ZxAaa2cgHftnEB+z61blo8tm+CPLZu0j21
        btg8tm+XPLdvWT+3byAAf38CAP8AAQAAAAAAAAAAP79fCD+0ahg+tm5KPbZvnjy1bsk9tm7LPLVvnDu2
        bjw4qXEJVapVAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRwACK3cQBntnEBprZyAd+2cQH7PLVujz21
        b6c9tW7YPbVuvzu1b148tHAiP79qDAD/AAEAAAAAAAAAAAAAAABVqlUDP79fCDy2bSo9tW5oPbZuoT21
        btQ9tW67PrRtVjq6axo4qXEJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHAAIrdxAGe2cQGmtnIB37Zx
        Afs9tm+3PbVvwDy2btI8tm+lO7ZuPDPMZgUAf38CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLZtFT20
        bz48tm9+PbVu1D22bs8+tW5vO7hsLz+vbxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0cAAit3EAZ7Zx
        Aaa2cgHftnEB+z21btQ8tW7NPbVvwDy1b4s6tG8wAH9/AgD/AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABFuXMLPblsIT23b2A8tW/KPLVv1zy2boY9t29HP7RqGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRw
        ACK3cQBntnEBprZyAd+2cQH7PbVu6Ty2btY9tW6yPbZueD+4bCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADPMZgU2tm0OO7ZwTTy1bsI8tW7bPLZvlzy2blg9uHIdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtHAAIrdxAGe2cQGmtnIB37ZxAfs9tm72PbVv3Dy2b6k9tW5sP7hxJAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAH9/AjPMZgU8tm5DPbVvvD21b9w9tm6hPbZuYz25bCEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC0cAAit3EAZ7ZxAaa2cgHftnEB+z22bv08tW7fPLVupDy1b2U8tHAiAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE6sXj5OrF+5Tqte3U6qXalRqVxrTalcJAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALZ0ACO2cQBqt3EBqLZxAd63cQH5PbVv/j22b+A9tW+jPbZuYz25
        bCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcJpCPXCYQbhwmEDec5Y9rnWU
        PHFykzwmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAunUAJbdyAG+2cgGst3EB3LZxAfQ9tm//PbZv4D22
        b6I7tm9iPblsIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACOiSU9jocluI+G
        I+OThB/AloMchJeCGy+/fwAE/wAAAQAAAAAAAAAAAAAAAP8AAAG3cAArtnIAf7ZxAbi2cgHYtnIB6D22
        b/89tm/gPbZvoju2b2I9uWwhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKd5
        DD2peAy4qncL7q12Ct2udgekr3cHQLlzAAu/fwAEAAAAAAAAAAD/AAABf38AArZzADW2cgGYtnEBzLZy
        AdC2cQHTPbZv/z22b+A9tm+iO7ZvYj25bCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtHMAPrdyAbm3cgHxt3EB57ZxAbq3cgBrtnEAOLRwACK5cwAWu2sAE7dwABm3bwAntnEAXLZy
        Abe3cgHWtnIBu7dyAa49tm//PbZv4D22b6I7tm9iPblsIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC0cwA+t3IBubdxAe63cgHdt3EByLdxAa+2cgGMt3MAXbhxAEG3bwA5uHEASLdy
        AG+3cgGgt3EB2bZxAde2cgGYt3EAeT22b/89tm/gPbZvoju2b2I9uWwhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALRzAD63cgG5tnIB6LZxAcy1cgG7tXEBtLdyAaO3cQGHtnIAeLdx
        AHW2cgGGt3IBqrdyAcS2cgHUt3EBtrhxAGy3cgBHPbZv/z22b+A9tm+iO7ZvYj25bCEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHMAPrdyAbm2cQHgtXIBtbZyAZO1cQB5tnEAfrZx
        AaK2cgG7tnIBybZxAdO2cgHYtnIBybZxAaa3cQB1tHMAN7R0ABg9tm//PbZv4D22b6I7tm9iPblsIQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0cwA+t3IBubZyAd21cgGqtXICerZw
        AE21cgBQt3EBhLZxAaa2cQG4t3EBvLZxAbS3cQGZuHEAbLdzAEC2bQAVAAAAAD22b/89tm/gPbZvoju2
        b2I9uWwhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRzAD63cgG5tnIB3bVy
        Aaq2cwJxt3AAMrNxABu5cwAst28AObhxAEG1cwBCtHMAPrVwADS4cQAktm0AFbZtAAcAAAAAPbZv/z22
        b+A9tm+iO7ZvYj25bCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHMAPrdy
        Abm2cgHdtXIBqrVzAmy4cQAkAAAAAAAAAAD/AAABv38ABL9/AAR/fwAC/wAAAQAAAAAAAAAAAAAAAAAA
        AAA9tm//PbZv4D22b6I7tm9iPblsIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC0cwA+t3IBubZyAd21cgGqtXMCbLhxACQAAAAAAAAAAAAAAAD/AAAB/wAAAf8AAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAD22b/89tm/gPbZvoju2b2I9uWwhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALRzAD63cgG5tnIB3bVyAaq1cwJsuHEAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAPbZv/z22b+A9tm+iO7ZvYj25bCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtHMAPrdyAbm2cgHdtXIBqrVzAmy4cQAkAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tm//PbZv4D22b6I7tm9iPblsIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0cwA+t3IBubZyAd21cgGqtXMCbLhxACQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD22b/89tm/gPbZvoju2b2I9uWwhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRzAD63cgG5tnIB3bVyAaq1cwJsuHEAJAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLVu2zy2bsE8tW+LPLZwVD+2
        bRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtnMANbZxAZ+2cgG+tXEBkrRz
        Al20cwAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8tm6UPLZvgju1
        b14+t285Q7trEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4cQAkuHEAbLVy
        AYG2cQJjtnEEP7ZtABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD22
        b3A7tm9iPbdvRzu3cCs2tm0OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZ2
        ABy4cQBTtnEAY7VyA0y0dAUwr28AEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA///////////////4/Af/+PAB//jgAP/4w/x/+If8P/gP/j/4D/8/+A//H/gf/x/4H/8f+B//
        H/gf/x/4H/8P+B//D/Af/w/wH/8D4R//AYMf/wwHH/8cDx//H/8f/x//H/8f/x//H/8f/x//H/8f/x//
        H/8f/x//P/+///////8oAAAAIAAAAEAAAAABAAgAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAA/653
        Cv+reQz/qHsP/6p6Df+1cwP/tnIC/7dyAf+xdQb/snUG/7N0BP+0dAT/p3sQ/6Z8Ef97kzf/dpY8/3iV
        Ov90mD7/PrVu/z22b/9um0P/cZlA/3CaQv9bplT/U6pb/1SpW/9VqVr/VqhZ/1eoWP9Sq13/U6pc/0mv
        ZP9Cs2r/Q7Nq/0G0a/9BtGz/n4AX/5aEH/+Zgxz/mIQd/46JJ/+PiSb/k4Yi/5CIJP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAT
        ExMTExMTExMTExMTExMTExMAAAAAAAAHBwcHBwcHExMTExMTExMTExMTExMTExMTExMTAAAAAAcHBwcH
        BwcTExMTExMTExMTExMTExMTExMTExMAAAAABwcHBwcHBxMTExMTExMTExMTExMTExMTExMTEwAAAAAH
        BwcHBwcHExMTExMTExMTExMTExMTExMTExMTAAAAAAcHBwcHBwcTExMTExMTExMTExMTExMTExMTExMT
        EwAABwcHBwcHBxMTExMTExMTExMTExMTExMTExMTExMTAAAHBwcHBwcHExMTExMTExMTExMTExMTExMT
        ExMTExMAAAcHBwcHBwcTExMTExMTExMTExMTExMTExMTExMTEwAABwcHBwcHBxMTExMTExMTExMTExMT
        ExMTExMTExMTAAAHBwcHBwcHExMTExMTExMTExMTExMTExMTExMTExMAAAcHBwcHBwcTExMTExMTExMA
        ABMTExMTExITExMTEwAABwcHBwcHBxMTExMTExMTEwAAExMSIyIhIyEhISEhAAAHBwcHBwcHExMTExMT
        EwAAAAATEx8dHh4eGhscHBcHBwcHBwcHBwcTExMTExMTAAAAABMTFBYWFhERDxAOJwcHBwcHBwcHBxMT
        ExMTExMAAAAAAAAoKCgpKSolJiQJBwcHBwcHBwcHExMTExMTEwAAAAAAAA0NDQ0DBAIBCQcHBwcHBwcH
        BwcTExMTExMTAAAAAAAACgoLCwsLCwcFBwcHBwcHBwcHBxMTExMTExMAAAAAAAAHBwcHBwcHBwcHBwcH
        BwcHBwcHExMTExMTEwAAAAAAAAcHBwcHBwUHBwcHBwcHBwcHBwcTExMTExMTAAAAAAAABwcHBwcHBwcH
        BwcHBwcHBwcHBxMTExMTExMAAAAAAAAHBwcHBwUHBQcHBwcHBwcHBwcHExMTExMTEwAAAAAAAAcHBwcH
        BwUFBwcHBwcHBwcHBwcTExMTExMTAAAAAAAABwcHBwcFBQcHBwcHBwcHBwcHBxMTExMTExMAAAAAAAAH
        BwcHBwcFBQUGBwcHBwcHBwcHExMTExMTEwAAAAAAAAcHBwcHBQUFBwUHBwcHBwcHBwATExMTExMTAAAA
        AAAABwcHBwcHBwUFBQcHBwcHBwcHABMTExMTExMAAAAAAAAHBwcHBwcLBQUGAAAAAAAAAAAAExMTExMT
        EwAAAAAAAAcHBwcHBQYGBgUAAAAAAAAAAAATExMTExMTAAAAAAAABwcHBwcHBQUFBQAAAAAAAAAAABMT
        ExMTExMAAAAAAAAHBwcHBwUFBQUFAAAAAAAAAAAAExMTExMTEwAAAAAAAAcHBwcHBgYGBgYAAAAAAAAA
        AAD///////////////j8B//48AH/+OAA//jD/H/4h/w/+A/+P/gP/z/4D/8f+B//H/gf/x/4H/8f+B//
        H/gf/w/4H/8P8B//D/Af/wPhH/8Bgx//DAcf/xwPH/8f/x//H/8f/x//H/8f/x//H/8f/x//H/8f/x//
        H/8//7///////ygAAAAQAAAAIAAAAAEAIAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtuAB60cwA3AAAAAAAA
        AAA6tG8wPLVugzy1bp89tW+SPLdvVTPMZgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2cQGJtnEB+wAA
        AAA8tm97PbZu/T22bt09tW6mPLVuuD22bvk9tm7PPbdwGQAAAAAAAAAAAAAAAAAAAAAAAAAAtnEBibZx
        Afs7t29APbVv/j22bpo/v38EAAAAAAAAAAA8tm0qPbVu6T21brsAAAAAAAAAAAAAAAAAAAAAAAAAALZx
        AYm2cQH7PLZvqTy2bus4qXEJAAAAAAAAAAAAAAAAAAAAADy2bmY9tm//O7hsLwAAAAAAAAAAAAAAAAAA
        AAC2cQGJtnEB+zy1buI8tm6oAAAAAAAAAAAAAAAAAAAAAAAAAAA/tGoYPbZv/zy3b24AAAAAAAAAAAAA
        AAAAAAAAtnEBibZxAfs8tm/8PbVuiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADy1b/c8tW+LAAAAAAAA
        AAAAAAAAAAAAALZxAYm2cQH7PbZv/zy1boMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCjzH1h4wsmgAA
        AAAAAAAAAAAAAAAAAAC2cgGYt3EB8j22b/88tW6DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAt3IB9rZx
        Aem7awATAAAAAAAAAAC/fwAEtnIB27dxAcg9tm//PLVugwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALdy
        Afa3cwLOtnEB07ZxAFy2cABGtnEBrbdyAf+1cQBePbZv/zy1boMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC3cgH2tnMDkLVzAEm3cgHStnIB/rdyAeq2cwBxAAAAAD22b/88tW6DAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAt3IB9rZzA5AAAAAAAAAAALZtAAf/AAABAAAAAAAAAAA9tm//PLVugwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALdyAfa2cwOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbZv/zy1boMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC3cgH2tnMDkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD22b/88tW6DAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAt3IB9rZzA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tm9wPrdvOQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALdxAG63cwNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAOP8
        AADA/AAAnnwAAD98AAA/fAAAPzwAAD88AAA/PAAAPxkAAD8jAAA/PwAAPz8AAD8/AAA/PwAA//8AACgA
        AAAQAAAAIAAAAAEACAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAD/tnMD/7dyAf89tm//h40t/4KQ
        Mv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAACAgAA
        AwMDAwMDAAAAAAAAAgIAAwMDAwMDAwMAAAAAAAICAwMDAwAAAwMDAwAAAAACAgMDAwAAAAADAwMAAAAA
        AgIDAwAAAAAAAwMDAAAAAAICAwMAAAAAAAMDAwAAAAACAgMDAAAAAAAABQQAAAAAAgIDAwAAAAAAAAIC
        AgAAAgICAwMAAAAAAAACAgICAgICAgMDAAAAAAAAAgECAgICAgIDAwAAAAAAAAIBAAICAgAAAwMAAAAA
        AAACAQAAAAAAAAMDAAAAAAAAAgEAAAAAAAADAwAAAAAAAAIBAAAAAAAAAwMAAAAAAAACAQAAAAAAAP//
        AADj/AAAwPwAAJ58AAA/fAAAP3wAAD88AAA/PAAAPzwAAD8ZAAA/IwAAPz8AAD8/AAA/PwAAPz8AAP//
        AAA=
</value>
  </data>
</root>