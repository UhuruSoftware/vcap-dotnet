<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Uhuru.Utilities.v3_5</name>
    </assembly>
    <members>
        <member name="T:Uhuru.Utilities.Json.JsonConvertibleObject">
            <summary>
            This object is used for serialization/deserialization of objects into/from JSON.
            </summary>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.DeserializeFromJsonArray(System.String)">
            <summary>
            Deserializes a json string that is supposed to contain an array (i.e. [{"field1" : "value1"}, "value2", 0])
            </summary>
            <param name="json">The json string.</param>
            <returns>An array of objects</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.DeserializeFromJson(System.String)">
            <summary>
            Deserializes json string that is supposed to contain an object (i.e. {"field1" : "value1"}).
            </summary>
            <param name="json">The json string.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.SerializeToJson(System.Object)">
            <summary>
            Serializes an intermediate object (a Dictionary&lt;string, object&gt; or a newtonsoft JObject) to a JSON string.
            </summary>
            <param name="intermediateValue">A Dictionary&lt;string, object&gt; or a newtonsoft JObject.</param>
            <returns>The JSON string.</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.ObjectToValue``1(System.Object)">
            <summary>
            Converts an object into another type.
            If the object is a JObject or JArray, this method uses their respective methods for conversion.
            Otherwise, it uses Convert.ChangeType.
            </summary>
            <typeparam name="T">The type to convert to.</typeparam>
            <param name="value">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.SerializeToJson">
            <summary>
            Serializes the instance to a JSON string.
            </summary>
            <returns>The JSON string.</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.ToJsonIntermediateObject">
            <summary>
            Converts this instance to a Dictionary&lt;string, object&gt; that is ready to be serialized to a Ruby-compatible JSON.
            </summary>
            <returns>A Dictionary&lt;string, object&gt;</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.FromJsonIntermediateObject(System.Object)">
            <summary>
            Goes through a deserialized JSON object (a Dictionary&lt;string, object&gt; or a newtonsoft JObject) and updates all field an properties of this instance.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.ConvertMember(System.Object,System.Type)">
            <summary>
            Converts an individual member.
            </summary>
            <param name="memberValue">The member value.</param>
            <param name="memberType">Type of the member.</param>
            <returns>The converted memeber.</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.GetEnumValueFromString(System.Type,System.String)">
            <summary>
            Gets an enum value from a string. The method first tries to match the string value to any defined JsonName attributes, then defaults to Enum.Parse.
            </summary>
            <param name="enumType">Type of the enum.</param>
            <param name="enumValue">The enum value.</param>
            <returns>The parsed enum value.</returns>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonConvertibleObject.SetMemberValue(System.Reflection.MemberInfo,System.Object)">
            <summary>
            Sets a member's value.
            </summary>
            <param name="member">The member (can be a field or a property).</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Uhuru.Utilities.Json.JsonNameAttribute">
            <summary>
            This is an attribute that is used to decorate fields/properties/enums with JSON names.
            The JSON name will be used instead of the member's name when serializing.
            This is used in conjunction <see cref="T:Uhuru.Utilities.Json.JsonConvertibleObject"/>.
            </summary>
        </member>
        <member name="F:Uhuru.Utilities.Json.JsonNameAttribute.name">
            <summary>
            The JSON name of the member.
            </summary>
        </member>
        <member name="M:Uhuru.Utilities.Json.JsonNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Uhuru.Utilities.Json.JsonNameAttribute"/> class.
            </summary>
            <param name="name">The JSON name of the member.</param>
        </member>
        <member name="P:Uhuru.Utilities.Json.JsonNameAttribute.Name">
            <summary>
            Gets the Name of the member.
            </summary>
        </member>
        <member name="T:Uhuru.Utilities.TunnelPackage">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Uhuru.Utilities.TunnelPackage.Create(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Prepares a HttpTunnel Service
            </summary>
            <param name="sourceDir">The source dir.</param>
            <param name="destinationDir">The destination dir.</param>
            <param name="remotePort">The remote port.</param>
            <param name="remoteHost">The remote host.</param>
            <param name="remoteProtocol">The remote protocol.</param>
        </member>
        <member name="M:Uhuru.Utilities.TunnelPackage.CopyAll(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Copies all files and subfolders from one folder to another
            </summary>
            <param name="source">The source directory info</param>
            <param name="target">The target directory info</param>
        </member>
    </members>
</doc>
